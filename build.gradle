plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10' apply false
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.runtime' version '1.11.4'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'application'
    id 'maven-publish'
}

apply from: 'versions.gradle'

wrapper {
    gradleVersion = '6.6.1'
}

description = "The official launcher for the Oldschool RuneScape Spectral client."

allprojects {
    apply plugin: "org.jetbrains.kotlin.jvm"

    group = 'org.spectral.launcher'
    version = '1.0.3'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"
        implementation "org.tinylog:tinylog-api-kotlin:$tinylog"
        implementation "org.tinylog:tinylog-impl:$tinylog"
        implementation "javax.xml.bind:jaxb-api:$jaxb"
        implementation "org.glassfish.jaxb:jaxb-runtime:$jaxb"
    }


    compileKotlin {
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_14.toString()
        }
    }

    compileJava {
        targetCompatibility = JavaVersion.VERSION_14.toString()
    }
}

javafx {
    version = '14'
    modules = ['javafx.base', 'javafx.fxml', 'javafx.web', 'javafx.media', 'javafx.controls', 'javafx.graphics', 'javafx.swing']
}

run {
    mainClassName = "org.spectral.launcher.SpectralLauncher"
    workingDir = rootProject.projectDir
}

dependencies {
    implementation "no.tornado:tornadofx:$tornadofx"
}

shadowJar {
    archivesBaseName = "spectral-laucnher"
}

runtime {
    //noinspection GroovyAssignabilityCheck
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    //noinspection GroovyAssignabilityCheck,GroovyAccessibility
    modules = [
            'java.sql',
            'java.logging',
            'java.management',
            'java.xml',
            'jdk.jsobject',
            'jdk.xml.dom',
            'jdk.jfr',
            'jdk.unsupported',
            'java.datatransfer',
            'java.desktop',
            'java.naming',
            'java.compiler',
            'java.scripting',
            'java.prefs',
            'jdk.unsupported.desktop',
            'java.net.http'
    ]
    launcher {
        noConsole = true
    }

    jpackage {
        imageName = "Spectral"
        installerName = "Spectral"
        imageName = "Spectral"
        appVersion = ""
        def currentOS = org.gradle.internal.os.OperatingSystem.current()
        def imageExtension = currentOS.windows ? 'ico' : currentOS.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/icons/spectral.$imageExtension"]
        installerOptions += ['--resource-dir', 'src/main/resources']
        installerOptions += ['--vendor', 'Spectral Powered']
        if(currentOS.windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }
}

publishing {
    repositories {
        mavenLocal()
        maven {
            url 'https://repo.spectralpowered.org'
            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_TOKEN")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = "org.spectral.launcher"
            artifactId = "launcher"
            version = rootProject.version
            from components.java
        }
    }
}
